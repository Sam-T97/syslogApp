@page
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@using SyslogShared.Models
@model syslogSite.Pages.DeviceAlertsModel
@inject SignInManager<IdentityUser> IdentityManager
@inject UserManager<IdentityUser>  UserManager
@{
    ViewData["Title"] = "DeviceUnreadAlerts";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
@if (IdentityManager.IsSignedIn(User) && User.IsInRole("Admin") || User.IsInRole("Engineer"))
{
    <div class="text-center">
    <h1>Devices with Alerts</h1>
    </div>
    <table class="table">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Device[0].HostName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Device[0].IP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Device[0].Alerts)
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Device)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.HostName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IP)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Alerts.Count)
                </td>
                <td>
                    <a asp-page="/UnreadAlertsDeviceFiltered" asp-route-id="@item.ID" asp-route-host="@item.HostName">Details</a> |
                    <a asp-page-handler="ClearAll" asp-route-id="@item.ID">Clear All</a> |
                    <a asp-page-handler="DeleteAll" asp-route-id="@item.ID"
                       onclick="return confirm('Deleting alerts is permanent are you sure?')">Delete All</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
@if (!Model.Device.Any())
{
    <p class="text-center">
        You have no devices with alerts to be read! <br/>
        Now that's a healthy network!
    </p>
}
}
else
{
    if (User.IsInRole("Standard"))
    {
        Response.Redirect("Identity/Account/AccessDenied");
    }
    else
    {
        Response.Redirect("/Identity/Account/Login");
    }
}
