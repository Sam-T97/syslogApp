@page
@model syslogSite.Pages.DeviceDetailsModel

@{
    ViewData["Title"] = "DeviceDetails";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<h1>Device Details</h1>
<div>
    <h4>@Html.DisplayFor(model => model.Device.HostName)</h4>
    <hr />
    <ul class="nav justify-content-center">
        <li class="nav-item active"><a data-toggle="tab" class="nav-link text-dark" href="#Details">Details</a></li>
        <li class="nav-item"><a data-toggle="tab" class="nav-link text-dark" href="#Config">Configuration</a></li>
        <li class="nav-item"><a data-toggle="tab" class="nav-link text-dark" href="#Terminal">Terminal</a></li>
    </ul>
    <hr/>
    <div class="tab-content">
    <div id="Details" class="tab-pane active">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Device.HostName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Device.HostName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Device.IP)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Device.IP)
            </dd>
        </dl>
    </div>
    <div id="Config" class="tab-pane fade">
        <h4>Backup Config Viewer</h4>
        <select id="BackupSelect" style="visibility: hidden"></select>
        <div id="BackupConfig" style="overflow-y: scroll; min-height: 0; max-height: 400px;">
            <text id="BackupConfigText"></text>
        </div>
        <hr />
        <h4>Running Config Viewer</h4>
        <div id="RunningConfig" style="overflow-y: scroll; height: 400px; min-height: 0;">
            <text id="RunningConfigText"></text>
        </div>
    </div>
        <div id="Terminal" class="tab-pane fade">
            Terminal Content here
        </div>
    </div>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Device.ID">Edit</a> |
    <a asp-page="./ListDevices">Back to List</a>
</div>
@section Scripts
{
    <script>
        $(document).ready(function() {
            $.ajax(
                {
                    type: "GET",
                    url: "/DeviceDetails?handler=BackupConfigs",
                    data: {},
                    contentType: "application/json",
                    dataType: "json",
                    success: function(data) {
                        console.log(data);
                        try {
                            data.pop();
                        } catch (err) {
                            //ignored the array may only have 1 element so pop isn't possible
                            //continue execution a result must have been returned otherwise the error function would have triggered
                        }
                        var dropdown = document.getElementById("BackupSelect");
                        for (var i = 0; i < data.length; i++) {
                            var opt = document.createElement('option');
                            opt.appendChild(document.createTextNode(data[i].toString()));
                            opt.value = data[i].toString();
                            dropdown.appendChild(opt);
                        }
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.log("A 404 was returned");
                        document.getElementById("BackupConfigText").innerText =
                            "Something went wrong trying to collect the backup config file names \n" +
                            "Check the remote device is live by looking at its details and try again";
                    }
                });
            $.ajax(
                {
                    type: "GET",
                    url: "/DeviceDetails?handler=RunningConfig",
                    data: {},
                    contentType: "application/json",
                    dataType: "json",
                    success: function(data) {
                        console.log(data);
                        var configArea = document.getElementById("RunningConfigText");
                        configArea.innerText = data;
                    }
                });
        });
    </script>
}
